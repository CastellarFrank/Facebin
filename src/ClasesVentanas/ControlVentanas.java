package ClasesVentanas;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ControlVentanas.java
 *
 * Created on 11-21-2011, 11:41:49 PM
 */
/**
 *
 * @author NIGHTMARE
 */
public abstract class ControlVentanas extends javax.swing.JFrame {
    
    static IniciarSesion inicio;
    static Registrar registro;
    static FaceMain face;
    static ModificarInformacion info;
    static File file=null;
    static FileReader fileR;
    static BuscarAmigos busqueda=null;
    static RandomAccessFile registros=null;
    static String cuentasActivas[];
    
    /** Creates new form ControlVentanas */
    public ControlVentanas() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void configFile(String path){
        file=new File(path);
    }
    public static void configArchivoEstados(){
        configFile("Principal/estados.fbn");
    }
    public static void crearFolderUser(String correo){
        configFile("Cuentas/"+correo);
        file.mkdir();
    }
    public static void crearModificarInfo(String correo){
        info=new ModificarInformacion(correo);
    }
    public static void configArchivoCuenta(String correo){
        configFile("Cuentas/"+correo);
    }
    public static void crearArchivoManageFriends(String correo){
        configFile("Cuentas/"+correo+"/manageFriends.fbn");
        crearFile();
    }
    public static void configArchivoGerencia(){
        configFile("Principal/gerencia.fbn");
    }
    public static void configArchivoPerfil(String correo){
        configFile("Cuentas/"+correo+"/profile.fbn");
    }
    public static void configArchivoAmigos(String correo){
        configFile("Cuentas/"+correo+"/manageFriends.fbn");
    }
    public static void crearRandom(){
        try{
            registros= new RandomAccessFile(file,"rw");
        }catch(Exception e){
            System.out.println(e.getMessage());
            e.printStackTrace();
        }
    }
    public static void crearFile(){
        try{  
            file.createNewFile();
        }catch(Exception e){
            System.out.println(e.getMessage());
            e.printStackTrace();
        }
    }
    public static void crearInicio(){
        inicio=new IniciarSesion();
    }
    public static void crearInicio(String correo){
        inicio=new IniciarSesion(correo);
    }
    public static void crearRegistro(){
        registro=new Registrar("Registrar una nueva cuenta"); 
    }
    public static void crearFace(String correo){
        face=new FaceMain("FACEBIN, Página Principal",correo);
    }
    public static void crearFacePerfil(String correo,String user){
        face=new FaceMain("FACEBIN, Perfíl",correo,user);
    }
    public static void abrirBusqueda(String correo){
        busqueda=new BuscarAmigos(correo);
    }
    public static void borrarUsuario(String correo){
        configArchivoCuenta(correo);
        borrar(file,file.listFiles(),0);
    }
    private static void borrar(File archiv,File lista[],int pos){
        if(pos<lista.length){
            if(lista[pos].isFile()){
                lista[pos].delete();
                borrar(archiv,lista,pos+1);
            }else if(lista[pos].isDirectory()){
                borrar(lista[pos],lista[pos].listFiles(),0);
                borrar(archiv,lista,pos+1);
            }
        }else{
            archiv.delete();
        }
    }
    public static boolean verificarCuentaActiva(String correo){
        for(String c:cuentasActivas){
            if(correo.equals(c)){
                return true;
            }
        }
        return false;
    }
    public static void agregarCuentasActivas(){
        cuentasActivas=new String[totalCuentasActivas()];
        configArchivoGerencia();
        crearRandom();
        int cont=0;
        try {
            registros.seek(0);
            while(registros.getFilePointer()<registros.length()){
                String c=registros.readUTF();
                registros.readUTF();
                boolean b=registros.readBoolean();
                if(b){
                    cuentasActivas[cont]=c;
                    cont++;
                }             
            }
            registros.close();
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }
    private static int totalCuentasActivas(){
        int cont=0;
        configArchivoGerencia();
        crearRandom();
        try {
            registros.seek(0);
            while(registros.getFilePointer()<registros.length()){
                registros.readUTF();
                registros.readUTF();
                boolean b=registros.readBoolean();
                if(b)
                    cont++;
            }
            registros.close();
        } catch (IOException ex) {
            ex.printStackTrace();
        }
        return cont;        
    }
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {            
            @Override
            public void run(){
                crearRegistro();
                inicio=new IniciarSesion();
                configFile("Cuentas");
                file.mkdir();
                configFile("Principal");
                file.mkdir();
                configArchivoGerencia();
                crearFile();
                agregarCuentasActivas();                
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
